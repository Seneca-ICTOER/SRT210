(()=>{"use strict";var e={913:()=>{try{self["workbox:core:6.5.2"]&&_()}catch(e){}},977:()=>{try{self["workbox:precaching:6.5.2"]&&_()}catch(e){}},80:()=>{try{self["workbox:routing:6.5.2"]&&_()}catch(e){}},873:()=>{try{self["workbox:strategies:6.5.2"]&&_()}catch(e){}}},t={};function s(a){var n=t[a];if(void 0!==n)return n.exports;var i=t[a]={exports:{}};return e[a](i,i.exports,s),i.exports}(()=>{s(913);const e=(e,...t)=>{let s=e;return t.length>0&&(s+=` :: ${JSON.stringify(t)}`),s};class t extends Error{constructor(t,s){super(e(t,s)),this.name=t,this.details=s}}const a={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},n=e=>[a.prefix,e,a.suffix].filter((e=>e&&e.length>0)).join("-"),i=e=>e||n(a.precache),r=e=>e||n(a.runtime);function c(e,t){const s=t();return e.waitUntil(s),s}s(977);function o(e){if(!e)throw new t("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:s,url:a}=e;if(!a)throw new t("add-to-cache-list-unexpected-type",{entry:e});if(!s){const e=new URL(a,location.href);return{cacheKey:e.href,url:e.href}}const n=new URL(a,location.href),i=new URL(a,location.href);return n.searchParams.set("__WB_REVISION__",s),{cacheKey:n.href,url:i.href}}class h{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:e,state:t})=>{t&&(t.originalRequest=e)},this.cachedResponseWillBeUsed=async({event:e,state:t,cachedResponse:s})=>{if("install"===e.type&&t&&t.originalRequest&&t.originalRequest instanceof Request){const e=t.originalRequest.url;s?this.notUpdatedURLs.push(e):this.updatedURLs.push(e)}return s}}}class l{constructor({precacheController:e}){this.cacheKeyWillBeUsed=async({request:e,params:t})=>{const s=(null==t?void 0:t.cacheKey)||this._precacheController.getCacheKeyForURL(e.url);return s?new Request(s,{headers:e.headers}):e},this._precacheController=e}}let u;async function f(e,s){let a=null;if(e.url){a=new URL(e.url).origin}if(a!==self.location.origin)throw new t("cross-origin-copy-response",{origin:a});const n=e.clone(),i={headers:new Headers(n.headers),status:n.status,statusText:n.statusText},r=s?s(i):i,c=function(){if(void 0===u){const e=new Response("");if("body"in e)try{new Response(e.body),u=!0}catch(e){u=!1}u=!1}return u}()?n.body:await n.blob();return new Response(c,r)}function d(e,t){const s=new URL(e);for(const e of t)s.searchParams.delete(e);return s.href}class p{constructor(){this.promise=new Promise(((e,t)=>{this.resolve=e,this.reject=t}))}}const g=new Set;s(873);function y(e){return"string"==typeof e?new Request(e):e}class w{constructor(e,t){this._cacheKeys={},Object.assign(this,t),this.event=t.event,this._strategy=e,this._handlerDeferred=new p,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map;for(const e of this._plugins)this._pluginStateMap.set(e,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(e){const{event:s}=this;let a=y(e);if("navigate"===a.mode&&s instanceof FetchEvent&&s.preloadResponse){const e=await s.preloadResponse;if(e)return e}const n=this.hasCallback("fetchDidFail")?a.clone():null;try{for(const e of this.iterateCallbacks("requestWillFetch"))a=await e({request:a.clone(),event:s})}catch(e){if(e instanceof Error)throw new t("plugin-error-request-will-fetch",{thrownErrorMessage:e.message})}const i=a.clone();try{let e;e=await fetch(a,"navigate"===a.mode?void 0:this._strategy.fetchOptions);for(const t of this.iterateCallbacks("fetchDidSucceed"))e=await t({event:s,request:i,response:e});return e}catch(e){throw n&&await this.runCallbacks("fetchDidFail",{error:e,event:s,originalRequest:n.clone(),request:i.clone()}),e}}async fetchAndCachePut(e){const t=await this.fetch(e),s=t.clone();return this.waitUntil(this.cachePut(e,s)),t}async cacheMatch(e){const t=y(e);let s;const{cacheName:a,matchOptions:n}=this._strategy,i=await this.getCacheKey(t,"read"),r=Object.assign(Object.assign({},n),{cacheName:a});s=await caches.match(i,r);for(const e of this.iterateCallbacks("cachedResponseWillBeUsed"))s=await e({cacheName:a,matchOptions:n,cachedResponse:s,request:i,event:this.event})||void 0;return s}async cachePut(e,s){const a=y(e);var n;await(n=0,new Promise((e=>setTimeout(e,n))));const i=await this.getCacheKey(a,"write");if(!s)throw new t("cache-put-with-no-response",{url:(r=i.url,new URL(String(r),location.href).href.replace(new RegExp(`^${location.origin}`),""))});var r;const c=await this._ensureResponseSafeToCache(s);if(!c)return!1;const{cacheName:o,matchOptions:h}=this._strategy,l=await self.caches.open(o),u=this.hasCallback("cacheDidUpdate"),f=u?await async function(e,t,s,a){const n=d(t.url,s);if(t.url===n)return e.match(t,a);const i=Object.assign(Object.assign({},a),{ignoreSearch:!0}),r=await e.keys(t,i);for(const t of r)if(n===d(t.url,s))return e.match(t,a)}(l,i.clone(),["__WB_REVISION__"],h):null;try{await l.put(i,u?c.clone():c)}catch(e){if(e instanceof Error)throw"QuotaExceededError"===e.name&&await async function(){for(const e of g)await e()}(),e}for(const e of this.iterateCallbacks("cacheDidUpdate"))await e({cacheName:o,oldResponse:f,newResponse:c.clone(),request:i,event:this.event});return!0}async getCacheKey(e,t){const s=`${e.url} | ${t}`;if(!this._cacheKeys[s]){let a=e;for(const e of this.iterateCallbacks("cacheKeyWillBeUsed"))a=y(await e({mode:t,request:a,event:this.event,params:this.params}));this._cacheKeys[s]=a}return this._cacheKeys[s]}hasCallback(e){for(const t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(const s of this.iterateCallbacks(e))await s(t)}*iterateCallbacks(e){for(const t of this._strategy.plugins)if("function"==typeof t[e]){const s=this._pluginStateMap.get(t),a=a=>{const n=Object.assign(Object.assign({},a),{state:s});return t[e](n)};yield a}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve(null)}async _ensureResponseSafeToCache(e){let t=e,s=!1;for(const e of this.iterateCallbacks("cacheWillUpdate"))if(t=await e({request:this.request,response:t,event:this.event})||void 0,s=!0,!t)break;return s||t&&200!==t.status&&(t=void 0),t}}class _ extends class{constructor(e={}){this.cacheName=r(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const t=e.event,s="string"==typeof e.request?new Request(e.request):e.request,a="params"in e?e.params:void 0,n=new w(this,{event:t,request:s,params:a}),i=this._getResponse(n,s,t);return[i,this._awaitComplete(i,n,s,t)]}async _getResponse(e,s,a){let n;await e.runCallbacks("handlerWillStart",{event:a,request:s});try{if(n=await this._handle(s,e),!n||"error"===n.type)throw new t("no-response",{url:s.url})}catch(t){if(t instanceof Error)for(const i of e.iterateCallbacks("handlerDidError"))if(n=await i({error:t,event:a,request:s}),n)break;if(!n)throw t}for(const t of e.iterateCallbacks("handlerWillRespond"))n=await t({event:a,request:s,response:n});return n}async _awaitComplete(e,t,s,a){let n,i;try{n=await e}catch(i){}try{await t.runCallbacks("handlerDidRespond",{event:a,request:s,response:n}),await t.doneWaiting()}catch(e){e instanceof Error&&(i=e)}if(await t.runCallbacks("handlerDidComplete",{event:a,request:s,response:n,error:i}),t.destroy(),i)throw i}}{constructor(e={}){e.cacheName=i(e.cacheName),super(e),this._fallbackToNetwork=!1!==e.fallbackToNetwork,this.plugins.push(_.copyRedirectedCacheableResponsesPlugin)}async _handle(e,t){const s=await t.cacheMatch(e);return s||(t.event&&"install"===t.event.type?await this._handleInstall(e,t):await this._handleFetch(e,t))}async _handleFetch(e,s){let a;const n=s.params||{};if(!this._fallbackToNetwork)throw new t("missing-precache-entry",{cacheName:this.cacheName,url:e.url});{0;const t=n.integrity,i=e.integrity,r=!i||i===t;if(a=await s.fetch(new Request(e,{integrity:i||t})),t&&r){this._useDefaultCacheabilityPluginIfNeeded();await s.cachePut(e,a.clone());0}}return a}async _handleInstall(e,s){this._useDefaultCacheabilityPluginIfNeeded();const a=await s.fetch(e);if(!await s.cachePut(e,a.clone()))throw new t("bad-precaching-response",{url:e.url,status:a.status});return a}_useDefaultCacheabilityPluginIfNeeded(){let e=null,t=0;for(const[s,a]of this.plugins.entries())a!==_.copyRedirectedCacheableResponsesPlugin&&(a===_.defaultPrecacheCacheabilityPlugin&&(e=s),a.cacheWillUpdate&&t++);0===t?this.plugins.push(_.defaultPrecacheCacheabilityPlugin):t>1&&null!==e&&this.plugins.splice(e,1)}}_.defaultPrecacheCacheabilityPlugin={cacheWillUpdate:async({response:e})=>!e||e.status>=400?null:e},_.copyRedirectedCacheableResponsesPlugin={cacheWillUpdate:async({response:e})=>e.redirected?await f(e):e};class v{constructor({cacheName:e,plugins:t=[],fallbackToNetwork:s=!0}={}){this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map,this._strategy=new _({cacheName:i(e),plugins:[...t,new l({precacheController:this})],fallbackToNetwork:s}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this._strategy}precache(e){this.addToCacheList(e),this._installAndActiveListenersAdded||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this._installAndActiveListenersAdded=!0)}addToCacheList(e){const s=[];for(const a of e){"string"==typeof a?s.push(a):a&&void 0===a.revision&&s.push(a.url);const{cacheKey:e,url:n}=o(a),i="string"!=typeof a&&a.revision?"reload":"default";if(this._urlsToCacheKeys.has(n)&&this._urlsToCacheKeys.get(n)!==e)throw new t("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(n),secondEntry:e});if("string"!=typeof a&&a.integrity){if(this._cacheKeysToIntegrities.has(e)&&this._cacheKeysToIntegrities.get(e)!==a.integrity)throw new t("add-to-cache-list-conflicting-integrities",{url:n});this._cacheKeysToIntegrities.set(e,a.integrity)}if(this._urlsToCacheKeys.set(n,e),this._urlsToCacheModes.set(n,i),s.length>0){const e=`Workbox is precaching URLs without revision info: ${s.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(e)}}}install(e){return c(e,(async()=>{const t=new h;this.strategy.plugins.push(t);for(const[t,s]of this._urlsToCacheKeys){const a=this._cacheKeysToIntegrities.get(s),n=this._urlsToCacheModes.get(t),i=new Request(t,{integrity:a,cache:n,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:s},request:i,event:e}))}const{updatedURLs:s,notUpdatedURLs:a}=t;return{updatedURLs:s,notUpdatedURLs:a}}))}activate(e){return c(e,(async()=>{const e=await self.caches.open(this.strategy.cacheName),t=await e.keys(),s=new Set(this._urlsToCacheKeys.values()),a=[];for(const n of t)s.has(n.url)||(await e.delete(n),a.push(n.url));return{deletedURLs:a}}))}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}getIntegrityForCacheKey(e){return this._cacheKeysToIntegrities.get(e)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s){return(await self.caches.open(this.strategy.cacheName)).match(s)}}createHandlerBoundToURL(e){const s=this.getCacheKeyForURL(e);if(!s)throw new t("non-precached-url",{url:e});return t=>(t.request=new Request(e),t.params=Object.assign({cacheKey:s},t.params),this.strategy.handle(t))}}s(80);(async()=>{const e=function(){const e=JSON.parse(new URLSearchParams(self.location.search).get("params"));return e.debug&&console.log("[Docusaurus-PWA][SW]: Service Worker params:",e),e}(),t=[{"revision":"ed54628727e738287323977da45bbcde","url":"404.html"},{"revision":"1b870783068a65570a41307b3052e7ae","url":"A-Labs/lab1.html"},{"revision":"5789ace42982aaa3cd352b025892dad1","url":"A-Labs/lab2.html"},{"revision":"088809bb11031e391bea6e8b41d89da3","url":"A-Labs/lab3.html"},{"revision":"96c288fedd068bce9ebde95b081d6ec4","url":"A-Labs/lab4-part2.html"},{"revision":"42bcab761866d18113de011e992ac7de","url":"A-Labs/lab4.html"},{"revision":"2c4b5adc2af45a60db22e6e7c74942c7","url":"A-Labs/lab5.html"},{"revision":"d45be58639b363858715e4c1d0f465de","url":"A-Labs/lab6.html"},{"revision":"6f4b4d5d427f3db44f466f69525735c8","url":"A-Labs/lab7.html"},{"revision":"b4c7888ff0055798c4b0e095ec9ef2e2","url":"A-Labs/lab8.html"},{"revision":"4a30e0992a6a9401f7f666bf4fc5df74","url":"assets/css/styles.099fe1a9.css"},{"revision":"82977eb2a2e22640a422e5bae0f6fd5d","url":"assets/js/131.812b4a0f.js"},{"revision":"1a714a2eefe7914a2cc632e9cfae1639","url":"assets/js/17896441.8b03c384.js"},{"revision":"11d66e2d011c540bc7af7f5a1da7edd1","url":"assets/js/1be78505.ee59778e.js"},{"revision":"b4388184345cb71b8dd48fa7f3e03ef8","url":"assets/js/283.3731d732.js"},{"revision":"4bb61f6e727523acfc39b403cf37eb85","url":"assets/js/30eb2287.7082106a.js"},{"revision":"957c61db410c3b6c3a3aea362ba315d0","url":"assets/js/3cfc6530.705c2d70.js"},{"revision":"d0b52433ba3849f7295b8c01bdce26a1","url":"assets/js/539.2d079d6a.js"},{"revision":"6086db76bbc902ddc13f3df4734aa803","url":"assets/js/5da50de0.02741b80.js"},{"revision":"2c7dcb22d6d834436ac646b0e6b2240a","url":"assets/js/5f827bca.035fad53.js"},{"revision":"ce1597353ac6e53d35c105ea1d0a27e0","url":"assets/js/61c5f690.54ce2cf4.js"},{"revision":"b41835d41e6fbc7986537b28ab0d1f64","url":"assets/js/66689c68.0971bb32.js"},{"revision":"d8a02a328276431e100b3b787348fa5e","url":"assets/js/8661af7e.adffd3fb.js"},{"revision":"fc07bb2553ccca230982ea10a85c358e","url":"assets/js/935f2afb.ba077c00.js"},{"revision":"e6077deab68634eff0b36014cb6d2185","url":"assets/js/972.bc6f3e9b.js"},{"revision":"de3b2d33b5864bd9dff64688bf18eeac","url":"assets/js/9af68f33.c858e3fc.js"},{"revision":"91e40df49dc74dcecaf01425c2b0a0c0","url":"assets/js/b5a834d3.24947f05.js"},{"revision":"bf39c9c078afc1295ca234aa27f23d70","url":"assets/js/b9232272.15a4db21.js"},{"revision":"c45f8bf14743cf700056bb91e3574fe8","url":"assets/js/c0e20c00.2083b644.js"},{"revision":"7fa4dd47afb053137891eca61d8bccde","url":"assets/js/ea934244.8f90778d.js"},{"revision":"9e62b72926311eeb15cd12daa187e354","url":"assets/js/eb6a5da1.3712ec23.js"},{"revision":"a2b1652736037737c6b6a08fbb3fac17","url":"assets/js/ebee8391.07082003.js"},{"revision":"59638d6e1b964b20f5635d6a7de6ccff","url":"assets/js/fbc24ebc.5cb8a6fb.js"},{"revision":"2cadb3f8299eb65a3770d532656069b3","url":"assets/js/main.beb789c5.js"},{"revision":"19fe5da1638bf63ad0e2608f8a869510","url":"assets/js/runtime~main.c7913e5e.js"},{"revision":"e3001fc21e549d316efb5ab0fdef4988","url":"B-Assignments/assignment1.html"},{"revision":"e50f480307fd17888efa28233c0a56ed","url":"B-Assignments/assignment2.html"},{"revision":"6a5df0427405c5c3b33b718a4527df8f","url":"C-ExtraResources/first-half-review.html"},{"revision":"7fdbda37fb073ec27d90b2bb33f6acc0","url":"index.html"},{"revision":"2524df02c6e551be5aef857403777080","url":"manifest.json"},{"revision":"eb3c66d936d2b2e6c3e520dfa473e54b","url":"weekly-schedule.html"},{"revision":"d710471700766a0a27fe0577e10a7df8","url":"assets/images/Andrew-afbdf155316d22a98680668976929d4b.jpg"},{"revision":"ac9d62b0597072fe3aa66c18f4820b5d","url":"assets/images/ConnectionNotSecure-9ad04da5ec0b002a2940dd5960a393b9.png"},{"revision":"15145205cd19035b3ee0a156df516276","url":"assets/images/FirefoxAddCA-cf882b8266717219a664af1b99bf81f0.png"},{"revision":"4b6ea95989c1a71241606c45a36e5571","url":"assets/images/Iptables-41593960263c3f4ed47eb8000073c778.png"},{"revision":"312b35d786574beefc89ceeaa6fe0b61","url":"assets/images/MarkFernandes-6c215a439b1890082f92eda2cd557d8a.jpg"},{"revision":"b1d193f44c2add93418aa94b1a31cc27","url":"assets/images/Spoof-33a214307013854d9d325b6da862c8c2.png"},{"revision":"ee6244b19a3febdf592826f2e4c9e016","url":"assets/images/TinyCACreateCApart1-6973d740f5496a7bb27a687b5e3814a4.png"},{"revision":"eb9a656416aeb352e2db9701d70ebc55","url":"assets/images/TinyCACreateCApart2-81c082fea82f6e1a4cefe1ebece3898c.png"},{"revision":"2c6923e0e93c768b45bbf76b2939662c","url":"assets/images/TinyCACreateCSR-2082770a1dfb225dc9411536b0e07bda.png"},{"revision":"5a6550783f68e1da3808007e20e405a2","url":"assets/images/TinyCAExportCACert-562b1d08484531bebfa6531d784d6746.png"},{"revision":"0d04d6a9203e6dd685c33eeacf914816","url":"assets/images/TinyCAExportCert-07a231942648ba8586e9199879a0df29.png"},{"revision":"b30c8b793155515b983129f6bbdf7431","url":"assets/images/TinyCAExportKey-e9d6a15d9c77d6d1fa6c6ad6c3156bd5.png"},{"revision":"e881c0a54d0608faaa1827b9bfd6dfdb","url":"assets/images/TinyCASignCSR-89ff923e5c2fb11aca9d1c122b5118ee.png"},{"revision":"d710471700766a0a27fe0577e10a7df8","url":"img/Andrew.jpg"},{"revision":"d7e3179946ffbe47a9c75841554ff91f","url":"img/commit-changes.png"},{"revision":"972a5a5d918a2c2a708e929c2ee801cc","url":"img/commit-dialog.png"},{"revision":"ac9d62b0597072fe3aa66c18f4820b5d","url":"img/ConnectionNotSecure.png"},{"revision":"608c392c8489cb3339e3cddfc0dfe67c","url":"img/Dhcpd.conf.png"},{"revision":"7fa1a026116afe175cae818030d4ffc4","url":"img/docusaurus.png"},{"revision":"ef2266bfb84465c731756b58cde0afb8","url":"img/favicon.ico"},{"revision":"15145205cd19035b3ee0a156df516276","url":"img/FirefoxAddCA.png"},{"revision":"7685ba4492fa1eb5044c77f38028f109","url":"img/github-actions-extension.png"},{"revision":"bdf6c435a6b835dff58f3938c7040c14","url":"img/github-actions.png"},{"revision":"5b54abe425c5d5e06a722956d91e901e","url":"img/github-check_change.png"},{"revision":"afe774d7fc75aad0ef523c8a96724076","url":"img/github-codespace-2.png"},{"revision":"4ce3488bede3244a0d5aef1c87a601a5","url":"img/github-codespace-source_control.png"},{"revision":"5e73303160820994caca80683d5dddac","url":"img/github-codespace.png"},{"revision":"951098320b22ccff79c540ada9c08fa3","url":"img/github-error_pass.png"},{"revision":"481afa959ff562582cda513a3635a072","url":"img/github-error.png"},{"revision":"ae4c1bbce0b6578dc4038c91247c492b","url":"img/github-error2.png"},{"revision":"dc6528b7f1d0fed414a50e056608574d","url":"img/github-error3.png"},{"revision":"a21c8c59f0853557677c2c4789fffa27","url":"img/github-highlighted_files-unedited.png"},{"revision":"53a9e32d807abf39af5c54b544679f22","url":"img/github-highlighted_files.png"},{"revision":"8e1ff443c6e9db1cdaf9fc97ac36341b","url":"img/github-pr_and_issues-extension.png"},{"revision":"2f3e44e1b18c7af8f144c976fb48087b","url":"img/github-prettier-extension.png"},{"revision":"d4f552517d661c60bd05073a96a1dd08","url":"img/github-repo.png"},{"revision":"4b6ea95989c1a71241606c45a36e5571","url":"img/Iptables.png"},{"revision":"22c6eb8088b86099d5a78b5a13f7b24d","url":"img/logo-dark.svg"},{"revision":"8817e00103e8837d17c2758b0ce25c41","url":"img/logo.svg"},{"revision":"312b35d786574beefc89ceeaa6fe0b61","url":"img/MarkFernandes.jpg"},{"revision":"2e1cb1ba37fc5ae886ea57248bdb60bd","url":"img/pwa/icon-192x192.png"},{"revision":"a0f8ed72d3d3489353a57a03aeac9b0d","url":"img/pwa/icon-256x256.png"},{"revision":"ab9ed19e2716b5c233d6132d66204d53","url":"img/pwa/icon-384x384.png"},{"revision":"b71acc5b894ccfac0c22eb39a590f2a0","url":"img/pwa/icon-512x512.png"},{"revision":"b1d193f44c2add93418aa94b1a31cc27","url":"img/Spoof.png"},{"revision":"ee6244b19a3febdf592826f2e4c9e016","url":"img/TinyCACreateCApart1.png"},{"revision":"eb9a656416aeb352e2db9701d70ebc55","url":"img/TinyCACreateCApart2.png"},{"revision":"2c6923e0e93c768b45bbf76b2939662c","url":"img/TinyCACreateCSR.png"},{"revision":"5a6550783f68e1da3808007e20e405a2","url":"img/TinyCAExportCACert.png"},{"revision":"0d04d6a9203e6dd685c33eeacf914816","url":"img/TinyCAExportCert.png"},{"revision":"b30c8b793155515b983129f6bbdf7431","url":"img/TinyCAExportKey.png"},{"revision":"e881c0a54d0608faaa1827b9bfd6dfdb","url":"img/TinyCASignCSR.png"},{"revision":"b9d9189ed8f8dd58e70d9f8b3f693b3e","url":"img/tutorial/docsVersionDropdown.png"},{"revision":"c14bff79aafafca0957ccc34ee026e2c","url":"img/tutorial/localeDropdown.png"},{"revision":"8d04d316f4d1777793ee773fcbf16cea","url":"img/undraw_docusaurus_mountain.svg"},{"revision":"3d3d63efa464a74e2befd1569465ed21","url":"img/undraw_docusaurus_react.svg"},{"revision":"932b535fc71feb29877bc4b9d708b1d0","url":"img/undraw_docusaurus_tree.svg"},{"revision":"a7651195e5149cb6d1b6b4ccb14ea70b","url":"img/vscode-extensions.png"},{"revision":"5b25494591002e58af37b866714f89f7","url":"img/vscode-file_explorer.png"},{"revision":"44c0fac4733884f86d2e3bb02dc3a085","url":"img/vscode-source_control.png"}],s=new v({fallbackToNetwork:!0});e.offlineMode&&(s.addToCacheList(t),e.debug&&console.log("[Docusaurus-PWA][SW]: addToCacheList",{precacheManifest:t})),await async function(e){}(),self.addEventListener("install",(t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: install event",{event:t}),t.waitUntil(s.install(t))})),self.addEventListener("activate",(t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: activate event",{event:t}),t.waitUntil(s.activate(t))})),self.addEventListener("fetch",(async t=>{if(e.offlineMode){const a=t.request.url,n=function(e){const t=new URL(e,self.location.href);return t.origin!==self.location.origin?[]:(t.search="",t.hash="",[t.href,`${t.href}${t.pathname.endsWith("/")?"":"/"}index.html`])}(a);for(const i of n){const r=s.getCacheKeyForURL(i);if(r){const s=caches.match(r);e.debug&&console.log("[Docusaurus-PWA][SW]: serving cached asset",{requestURL:a,possibleURL:i,possibleURLs:n,cacheKey:r,cachedResponse:s}),t.respondWith(s);break}}}})),self.addEventListener("message",(async t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: message event",{event:t});const s=t.data?.type;"SKIP_WAITING"===s&&self.skipWaiting()}))})()})()})();